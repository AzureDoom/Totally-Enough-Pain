buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
		maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.modrinth.minotaur:Minotaur:2.+"
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.modrinth.minotaur"
import com.modrinth.minotaur.dependencies.ModDependency

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "tep.refmap.json"
    config "tep.mixins.json"
}

minecraft {
    mappings channel: 'official', version: '1.20'
    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=tep.mixins.json"
            workingDirectory project.file('run')
            taskName 'tep1.20_client'
            mods {
                tep {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20-46.0.14'
  	implementation fg.deobf('mod.azure.azurelib:azurelib-forge-1.20:1.0.14')
	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

if (file('key.properties').exists()) {
    curseforge {
    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())
    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "541387"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion("1.20")
			addGameVersion("Forge")
			addGameVersion("Java 17")

        	relations {
            	requiredDependency 'azurelib' 
        	}
    	}
    	options {
        	forgeGradleIntegration = false
    	}
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = 'zJ4xQwqI' 
		versionNumber = project.mod_version 
		versionName = 'Forge 1.20'
		uploadFile = jar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20']
		loaders = ['forge']
		dependencies { 
        	required.project "azurelib"
   		}
	}
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
